//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/util/Parameters.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeCoreUtilParameters")
#ifdef RESTRICT_OrgMapsforgeCoreUtilParameters
#define INCLUDE_ALL_OrgMapsforgeCoreUtilParameters 0
#else
#define INCLUDE_ALL_OrgMapsforgeCoreUtilParameters 1
#endif
#undef RESTRICT_OrgMapsforgeCoreUtilParameters

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMapsforgeCoreUtilParameters_) && (INCLUDE_ALL_OrgMapsforgeCoreUtilParameters || defined(INCLUDE_OrgMapsforgeCoreUtilParameters))
#define OrgMapsforgeCoreUtilParameters_

@class JavaLangBoolean;
@class JavaLangInteger;
@class OrgMapsforgeCoreUtilParameters_ParentTilesRendering;
@class OrgMapsforgeCoreUtilParameters_SymbolScaling;
@protocol JavaUtilSet;

@interface OrgMapsforgeCoreUtilParameters : NSObject

@end

J2OBJC_STATIC_INIT(OrgMapsforgeCoreUtilParameters)

inline bool OrgMapsforgeCoreUtilParameters_get_ANDROID_32BIT_COLOR(void);
inline bool OrgMapsforgeCoreUtilParameters_set_ANDROID_32BIT_COLOR(bool value);
inline bool *OrgMapsforgeCoreUtilParameters_getRef_ANDROID_32BIT_COLOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilParameters_ANDROID_32BIT_COLOR;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, ANDROID_32BIT_COLOR, bool)

inline bool OrgMapsforgeCoreUtilParameters_get_ANTI_ALIASING(void);
inline bool OrgMapsforgeCoreUtilParameters_set_ANTI_ALIASING(bool value);
inline bool *OrgMapsforgeCoreUtilParameters_getRef_ANTI_ALIASING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilParameters_ANTI_ALIASING;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, ANTI_ALIASING, bool)

inline bool OrgMapsforgeCoreUtilParameters_get_ELASTIC_ZOOM(void);
inline bool OrgMapsforgeCoreUtilParameters_set_ELASTIC_ZOOM(bool value);
inline bool *OrgMapsforgeCoreUtilParameters_getRef_ELASTIC_ZOOM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilParameters_ELASTIC_ZOOM;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, ELASTIC_ZOOM, bool)

inline bool OrgMapsforgeCoreUtilParameters_get_FRACTIONAL_ZOOM(void);
inline bool OrgMapsforgeCoreUtilParameters_set_FRACTIONAL_ZOOM(bool value);
inline bool *OrgMapsforgeCoreUtilParameters_getRef_FRACTIONAL_ZOOM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilParameters_FRACTIONAL_ZOOM;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, FRACTIONAL_ZOOM, bool)

inline bool OrgMapsforgeCoreUtilParameters_get_LAYER_SCROLL_EVENT(void);
inline bool OrgMapsforgeCoreUtilParameters_set_LAYER_SCROLL_EVENT(bool value);
inline bool *OrgMapsforgeCoreUtilParameters_getRef_LAYER_SCROLL_EVENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilParameters_LAYER_SCROLL_EVENT;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, LAYER_SCROLL_EVENT, bool)

inline jint OrgMapsforgeCoreUtilParameters_get_MAXIMUM_BUFFER_SIZE(void);
inline jint OrgMapsforgeCoreUtilParameters_set_MAXIMUM_BUFFER_SIZE(jint value);
inline jint *OrgMapsforgeCoreUtilParameters_getRef_MAXIMUM_BUFFER_SIZE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilParameters_MAXIMUM_BUFFER_SIZE;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, MAXIMUM_BUFFER_SIZE, jint)

inline jint OrgMapsforgeCoreUtilParameters_get_NUMBER_OF_THREADS(void);
inline jint OrgMapsforgeCoreUtilParameters_set_NUMBER_OF_THREADS(jint value);
inline jint *OrgMapsforgeCoreUtilParameters_getRef_NUMBER_OF_THREADS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilParameters_NUMBER_OF_THREADS;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, NUMBER_OF_THREADS, jint)

inline OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_get_PARENT_TILES_RENDERING(void);
inline OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_set_PARENT_TILES_RENDERING(OrgMapsforgeCoreUtilParameters_ParentTilesRendering *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_PARENT_TILES_RENDERING;
J2OBJC_STATIC_FIELD_OBJ(OrgMapsforgeCoreUtilParameters, PARENT_TILES_RENDERING, OrgMapsforgeCoreUtilParameters_ParentTilesRendering *)

inline id<JavaUtilSet> OrgMapsforgeCoreUtilParameters_get_POLYGON_EXCEPTIONS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilSet> OrgMapsforgeCoreUtilParameters_POLYGON_EXCEPTIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeCoreUtilParameters, POLYGON_EXCEPTIONS, id<JavaUtilSet>)

inline jint OrgMapsforgeCoreUtilParameters_get_POLYGON_ZOOM_MIN(void);
inline jint OrgMapsforgeCoreUtilParameters_set_POLYGON_ZOOM_MIN(jint value);
inline jint *OrgMapsforgeCoreUtilParameters_getRef_POLYGON_ZOOM_MIN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilParameters_POLYGON_ZOOM_MIN;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, POLYGON_ZOOM_MIN, jint)

inline bool OrgMapsforgeCoreUtilParameters_get_ROTATION_MATRIX(void);
inline bool OrgMapsforgeCoreUtilParameters_set_ROTATION_MATRIX(bool value);
inline bool *OrgMapsforgeCoreUtilParameters_getRef_ROTATION_MATRIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilParameters_ROTATION_MATRIX;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, ROTATION_MATRIX, bool)

inline bool OrgMapsforgeCoreUtilParameters_get_SQUARE_FRAME_BUFFER(void);
inline bool OrgMapsforgeCoreUtilParameters_set_SQUARE_FRAME_BUFFER(bool value);
inline bool *OrgMapsforgeCoreUtilParameters_getRef_SQUARE_FRAME_BUFFER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilParameters_SQUARE_FRAME_BUFFER;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, SQUARE_FRAME_BUFFER, bool)

inline OrgMapsforgeCoreUtilParameters_SymbolScaling *OrgMapsforgeCoreUtilParameters_get_SYMBOL_SCALING(void);
inline OrgMapsforgeCoreUtilParameters_SymbolScaling *OrgMapsforgeCoreUtilParameters_set_SYMBOL_SCALING(OrgMapsforgeCoreUtilParameters_SymbolScaling *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMapsforgeCoreUtilParameters_SymbolScaling *OrgMapsforgeCoreUtilParameters_SYMBOL_SCALING;
J2OBJC_STATIC_FIELD_OBJ(OrgMapsforgeCoreUtilParameters, SYMBOL_SCALING, OrgMapsforgeCoreUtilParameters_SymbolScaling *)

inline bool OrgMapsforgeCoreUtilParameters_get_VALIDATE_COORDINATES(void);
inline bool OrgMapsforgeCoreUtilParameters_set_VALIDATE_COORDINATES(bool value);
inline bool *OrgMapsforgeCoreUtilParameters_getRef_VALIDATE_COORDINATES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilParameters_VALIDATE_COORDINATES;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreUtilParameters, VALIDATE_COORDINATES, bool)

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeCoreUtilParameters)


#endif

#if !defined (OrgMapsforgeCoreUtilParameters_ParentTilesRendering_) && (INCLUDE_ALL_OrgMapsforgeCoreUtilParameters || defined(INCLUDE_OrgMapsforgeCoreUtilParameters_ParentTilesRendering))
#define OrgMapsforgeCoreUtilParameters_ParentTilesRendering_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;
@class NSString;

typedef NS_ENUM(jint, OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum) {
  OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum_QUALITY NS_SWIFT_NAME(quality) = 0,
  OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum_SPEED NS_SWIFT_NAME(speed) = 1,
  OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum_OFF NS_SWIFT_NAME(off) = 2,
};

#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define OrgMapsforgeCoreUtilParameters_ParentTilesRendering_ORDINAL jint
#else
#define OrgMapsforgeCoreUtilParameters_ParentTilesRendering_ORDINAL OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum
#endif


@interface OrgMapsforgeCoreUtilParameters_ParentTilesRendering : JavaLangEnum

#pragma mark Public

+ (OrgMapsforgeCoreUtilParameters_ParentTilesRendering *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum)toNSEnum;

@property(readonly) OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum enumValue;
+ (OrgMapsforgeCoreUtilParameters_ParentTilesRendering *)fromNSEnum:(OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum)value;

- (OrgMapsforgeCoreUtilParameters_ParentTilesRendering_ORDINAL)ordinal NS_SWIFT_UNAVAILABLE("Use .enumValue");

- (nullable instancetype)initWithParentTilesRendering:(OrgMapsforgeCoreUtilParameters_ParentTilesRendering_Enum)value;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeCoreUtilParameters_ParentTilesRendering)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_ParentTilesRendering_values_[];

inline OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_ParentTilesRendering_get_QUALITY(void);
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreUtilParameters_ParentTilesRendering, QUALITY)

inline OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_ParentTilesRendering_get_SPEED(void);
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreUtilParameters_ParentTilesRendering, SPEED)

inline OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_ParentTilesRendering_get_OFF(void);
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreUtilParameters_ParentTilesRendering, OFF)

FOUNDATION_EXPORT IOSObjectArray *OrgMapsforgeCoreUtilParameters_ParentTilesRendering_values(void);

FOUNDATION_EXPORT OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_ParentTilesRendering_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgMapsforgeCoreUtilParameters_ParentTilesRendering *OrgMapsforgeCoreUtilParameters_ParentTilesRendering_fromOrdinal(OrgMapsforgeCoreUtilParameters_ParentTilesRendering_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeCoreUtilParameters_ParentTilesRendering)


#endif

#if !defined (OrgMapsforgeCoreUtilParameters_SymbolScaling_) && (INCLUDE_ALL_OrgMapsforgeCoreUtilParameters || defined(INCLUDE_OrgMapsforgeCoreUtilParameters_SymbolScaling))
#define OrgMapsforgeCoreUtilParameters_SymbolScaling_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;
@class NSString;

typedef NS_ENUM(jint, OrgMapsforgeCoreUtilParameters_SymbolScaling_Enum) {
  OrgMapsforgeCoreUtilParameters_SymbolScaling_Enum_ALL NS_SWIFT_NAME(all) = 0,
  OrgMapsforgeCoreUtilParameters_SymbolScaling_Enum_POI NS_SWIFT_NAME(poi) = 1,
};

#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define OrgMapsforgeCoreUtilParameters_SymbolScaling_ORDINAL jint
#else
#define OrgMapsforgeCoreUtilParameters_SymbolScaling_ORDINAL OrgMapsforgeCoreUtilParameters_SymbolScaling_Enum
#endif


@interface OrgMapsforgeCoreUtilParameters_SymbolScaling : JavaLangEnum

#pragma mark Public

+ (OrgMapsforgeCoreUtilParameters_SymbolScaling *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgMapsforgeCoreUtilParameters_SymbolScaling_Enum)toNSEnum;

@property(readonly) OrgMapsforgeCoreUtilParameters_SymbolScaling_Enum enumValue;
+ (OrgMapsforgeCoreUtilParameters_SymbolScaling *)fromNSEnum:(OrgMapsforgeCoreUtilParameters_SymbolScaling_Enum)value;

- (OrgMapsforgeCoreUtilParameters_SymbolScaling_ORDINAL)ordinal NS_SWIFT_UNAVAILABLE("Use .enumValue");

- (nullable instancetype)initWithSymbolScaling:(OrgMapsforgeCoreUtilParameters_SymbolScaling_Enum)value;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeCoreUtilParameters_SymbolScaling)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgMapsforgeCoreUtilParameters_SymbolScaling *OrgMapsforgeCoreUtilParameters_SymbolScaling_values_[];

inline OrgMapsforgeCoreUtilParameters_SymbolScaling *OrgMapsforgeCoreUtilParameters_SymbolScaling_get_ALL(void);
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreUtilParameters_SymbolScaling, ALL)

inline OrgMapsforgeCoreUtilParameters_SymbolScaling *OrgMapsforgeCoreUtilParameters_SymbolScaling_get_POI(void);
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreUtilParameters_SymbolScaling, POI)

FOUNDATION_EXPORT IOSObjectArray *OrgMapsforgeCoreUtilParameters_SymbolScaling_values(void);

FOUNDATION_EXPORT OrgMapsforgeCoreUtilParameters_SymbolScaling *OrgMapsforgeCoreUtilParameters_SymbolScaling_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgMapsforgeCoreUtilParameters_SymbolScaling *OrgMapsforgeCoreUtilParameters_SymbolScaling_fromOrdinal(OrgMapsforgeCoreUtilParameters_SymbolScaling_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeCoreUtilParameters_SymbolScaling)


#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeCoreUtilParameters")
