//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/util/LatLongUtils.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeCoreUtilLatLongUtils")
#ifdef RESTRICT_OrgMapsforgeCoreUtilLatLongUtils
#define INCLUDE_ALL_OrgMapsforgeCoreUtilLatLongUtils 0
#else
#define INCLUDE_ALL_OrgMapsforgeCoreUtilLatLongUtils 1
#endif
#undef RESTRICT_OrgMapsforgeCoreUtilLatLongUtils

#if !defined (OrgMapsforgeCoreUtilLatLongUtils_) && (INCLUDE_ALL_OrgMapsforgeCoreUtilLatLongUtils || defined(INCLUDE_OrgMapsforgeCoreUtilLatLongUtils))
#define OrgMapsforgeCoreUtilLatLongUtils_

@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangByte;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class NSString;
@class OrgMapsforgeCoreModelBoundingBox;
@class OrgMapsforgeCoreModelDimension;
@class OrgMapsforgeCoreModelLatLong;
@class OrgMapsforgeCoreModelPoint;
@protocol JavaUtilList;

@interface OrgMapsforgeCoreUtilLatLongUtils : NSObject

#pragma mark Public

+ (bool)containsWithOrgMapsforgeCoreModelLatLongArray:(IOSObjectArray *)latLongs
                     withOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong;

+ (bool)containsWithJavaUtilList:(id<JavaUtilList>)latLongs
withOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong;

+ (jint)degreesToMicrodegreesWithDouble:(jdouble)coordinate;

+ (OrgMapsforgeCoreModelLatLong *)destinationPointWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)start
                                                                        withDouble:(jdouble)distance
                                                                         withFloat:(jfloat)bearing;

+ (jdouble)distanceWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong1
                   withOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong2;

+ (jdouble)distanceSegmentPointWithDouble:(jdouble)startX
                               withDouble:(jdouble)startY
                               withDouble:(jdouble)endX
                               withDouble:(jdouble)endY
                               withDouble:(jdouble)pointX
                               withDouble:(jdouble)pointY;

+ (OrgMapsforgeCoreModelLatLong *)fromStringWithNSString:(NSString *)latLongString;

+ (bool)isClosedWayWithOrgMapsforgeCoreModelLatLongArray:(IOSObjectArray *)latLongs;

+ (jdouble)latitudeDistanceWithInt:(jint)meters;

+ (jdouble)longitudeDistanceWithInt:(jint)meters
                         withDouble:(jdouble)latitude;

+ (jdouble)microdegreesToDegreesWithInt:(jint)coordinate;

+ (OrgMapsforgeCoreModelPoint *)nearestSegmentPointWithDouble:(jdouble)startX
                                                   withDouble:(jdouble)startY
                                                   withDouble:(jdouble)endX
                                                   withDouble:(jdouble)endY
                                                   withDouble:(jdouble)pointX
                                                   withDouble:(jdouble)pointY;

+ (IOSDoubleArray *)parseCoordinateStringWithNSString:(NSString *)coordinatesString
                                              withInt:(jint)numberOfCoordinates;

+ (jdouble)sphericalDistanceWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong1
                            withOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong2;

+ (jdouble)validateLatitudeWithDouble:(jdouble)latitude;

+ (jdouble)validateLongitudeWithDouble:(jdouble)longitude;

+ (jdouble)vincentyDistanceWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong1
                           withOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong2;

+ (jbyte)zoomForBoundsWithOrgMapsforgeCoreModelDimension:(OrgMapsforgeCoreModelDimension *)dimension
                    withOrgMapsforgeCoreModelBoundingBox:(OrgMapsforgeCoreModelBoundingBox *)boundingBox
                                                 withInt:(jint)tileSize;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeCoreUtilLatLongUtils)

inline jdouble OrgMapsforgeCoreUtilLatLongUtils_get_EQUATORIAL_RADIUS(void);
#define OrgMapsforgeCoreUtilLatLongUtils_EQUATORIAL_RADIUS 6378137.0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeCoreUtilLatLongUtils, EQUATORIAL_RADIUS, jdouble)

inline jdouble OrgMapsforgeCoreUtilLatLongUtils_get_INVERSE_FLATTENING(void);
#define OrgMapsforgeCoreUtilLatLongUtils_INVERSE_FLATTENING 298.257223563
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeCoreUtilLatLongUtils, INVERSE_FLATTENING, jdouble)

inline jdouble OrgMapsforgeCoreUtilLatLongUtils_get_POLAR_RADIUS(void);
#define OrgMapsforgeCoreUtilLatLongUtils_POLAR_RADIUS 6356752.3142
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeCoreUtilLatLongUtils, POLAR_RADIUS, jdouble)

inline jdouble OrgMapsforgeCoreUtilLatLongUtils_get_LATITUDE_MAX(void);
#define OrgMapsforgeCoreUtilLatLongUtils_LATITUDE_MAX 90.0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeCoreUtilLatLongUtils, LATITUDE_MAX, jdouble)

inline jdouble OrgMapsforgeCoreUtilLatLongUtils_get_LATITUDE_MIN(void);
#define OrgMapsforgeCoreUtilLatLongUtils_LATITUDE_MIN -90.0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeCoreUtilLatLongUtils, LATITUDE_MIN, jdouble)

inline jdouble OrgMapsforgeCoreUtilLatLongUtils_get_LONGITUDE_MAX(void);
#define OrgMapsforgeCoreUtilLatLongUtils_LONGITUDE_MAX 180.0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeCoreUtilLatLongUtils, LONGITUDE_MAX, jdouble)

inline jdouble OrgMapsforgeCoreUtilLatLongUtils_get_LONGITUDE_MIN(void);
#define OrgMapsforgeCoreUtilLatLongUtils_LONGITUDE_MIN -180.0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeCoreUtilLatLongUtils, LONGITUDE_MIN, jdouble)

FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilLatLongUtils_containsWithOrgMapsforgeCoreModelLatLongArray_withOrgMapsforgeCoreModelLatLong_(IOSObjectArray *latLongs, OrgMapsforgeCoreModelLatLong *latLong);

FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilLatLongUtils_containsWithJavaUtilList_withOrgMapsforgeCoreModelLatLong_(id<JavaUtilList> latLongs, OrgMapsforgeCoreModelLatLong *latLong);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilLatLongUtils_degreesToMicrodegreesWithDouble_(jdouble coordinate);

FOUNDATION_EXPORT OrgMapsforgeCoreModelLatLong *OrgMapsforgeCoreUtilLatLongUtils_destinationPointWithOrgMapsforgeCoreModelLatLong_withDouble_withFloat_(OrgMapsforgeCoreModelLatLong *start, jdouble distance, jfloat bearing);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_distanceWithOrgMapsforgeCoreModelLatLong_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeCoreModelLatLong *latLong1, OrgMapsforgeCoreModelLatLong *latLong2);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_distanceSegmentPointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble startX, jdouble startY, jdouble endX, jdouble endY, jdouble pointX, jdouble pointY);

FOUNDATION_EXPORT OrgMapsforgeCoreModelLatLong *OrgMapsforgeCoreUtilLatLongUtils_fromStringWithNSString_(NSString *latLongString);

FOUNDATION_EXPORT bool OrgMapsforgeCoreUtilLatLongUtils_isClosedWayWithOrgMapsforgeCoreModelLatLongArray_(IOSObjectArray *latLongs);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_latitudeDistanceWithInt_(jint meters);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_longitudeDistanceWithInt_withDouble_(jint meters, jdouble latitude);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_microdegreesToDegreesWithInt_(jint coordinate);

FOUNDATION_EXPORT OrgMapsforgeCoreModelPoint *OrgMapsforgeCoreUtilLatLongUtils_nearestSegmentPointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble startX, jdouble startY, jdouble endX, jdouble endY, jdouble pointX, jdouble pointY);

FOUNDATION_EXPORT IOSDoubleArray *OrgMapsforgeCoreUtilLatLongUtils_parseCoordinateStringWithNSString_withInt_(NSString *coordinatesString, jint numberOfCoordinates);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_sphericalDistanceWithOrgMapsforgeCoreModelLatLong_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeCoreModelLatLong *latLong1, OrgMapsforgeCoreModelLatLong *latLong2);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_validateLatitudeWithDouble_(jdouble latitude);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_validateLongitudeWithDouble_(jdouble longitude);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilLatLongUtils_vincentyDistanceWithOrgMapsforgeCoreModelLatLong_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeCoreModelLatLong *latLong1, OrgMapsforgeCoreModelLatLong *latLong2);

FOUNDATION_EXPORT jbyte OrgMapsforgeCoreUtilLatLongUtils_zoomForBoundsWithOrgMapsforgeCoreModelDimension_withOrgMapsforgeCoreModelBoundingBox_withInt_(OrgMapsforgeCoreModelDimension *dimension, OrgMapsforgeCoreModelBoundingBox *boundingBox, jint tileSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeCoreUtilLatLongUtils)


#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeCoreUtilLatLongUtils")
